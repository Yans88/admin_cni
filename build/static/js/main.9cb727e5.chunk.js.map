{"version":3,"sources":["members/MemberService.js","store/actions.js","store/reducers/auth.js","store/reducers/member.js","store/index.js","components/main/Header.js","components/main/MenuSidebar.js","users/AdminService.js","components/button/Button.js","components/modal/MyModal.js","components/modal/SwalSuccess.js","users/UserList.js","components/login/LoginService.js","members/Members.js","members/Konsumen.js","category/CategoryService.js","assets/no_photo.jpg","category/Category.js","banners/BannerService.js","banners/Banner.js","components/main/Main.js","services/auth.js","components/login/Login.js","router/ProtectedRoute.js","router/PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","process","param","action","axios","post","LOGIN_USER","LOGOUT_USER","LOAD_USER","GET_DATA","VIEW_DETAIL","CryptoJS","require","dt","dt_res","_dt","initialState","isLoggedIn","localStorage","getItem","token","currentUser","id_operator","name","password","reducer","state","type","ActionTypes","AES","decrypt","toString","enc","Utf8","split","setItem","removeItem","getMemberList","errorMessage","members","payload","data","rootReducer","combineReducers","auth","authReducer","membersReducer","store","createStore","connect","user","dispatch","onUserLogout","toggleMenuSidebar","useState","isDropdownOpen","dropdownState","updateDropdownState","dropdownRef","useRef","history","useHistory","toggleDropdown","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","className","to","data-widget","role","onClick","data-toggle","preventDefault","push","MenuSidebar","style","marginTop","data-accordion","icons","facebook","google","googlePlus","sign","edit","delete","AppButton","spinnerTemplate","iconTemplate","children","isLoading","icon","theme","disabled","otherProps","Spinner","as","animation","size","aria-hidden","Button","variant","AppModal","handleClose","title","form","formSubmit","titleButton","themeButton","Modal","onHide","Header","closeButton","Title","Body","Footer","AppSwalSuccess","show","textBody","text","onConfirm","onCancel","onEscapeKey","onOutsideClick","initAdmin","id_admin","username","pass","selected","setSelected","admin","setAdmin","totalData","setTotalData","pageNumb","setPageNumb","pageSize","setPageSize","sortOrder","setSortOrder","sortColumn","setSortColumn","filterValue","setFilterValue","loadTbl","setLoadTbl","setShow","setLoading","deleteForm","setdeleteForm","errMsg","setErrMsg","actionForm","setActionForm","showSwalSuccess","setshowSwalSuccess","columns","key","width","align","sortable","cell","row","index","record","e","editRecord","marginRight","deleteRecord","getData","queryString","AdminService","postDataUsers","then","response","setTimeout","err_code","total_data","catch","console","log","handleSave","userPost","a","contentSwal","created_by","dangerouslySetInnerHTML","__html","updated_by","deleted_by","res","err_msg","error","sort_order","sort_column","keyword","page_number","per_page","formik","useFormik","initialValues","enableReinitialize","validationSchema","Yup","required","onSubmit","values","setSubmitting","resetForm","onReset","frmUser","Form","id","Group","controlId","Control","getFieldProps","Label","touched","errors","value","placeholder","contentDelete","config","key_column","page_size","length_menu","show_filter","show_pagination","pagination","button","excel","print","language","loading_text","records","dynamic","onChange","Object","keys","map","order","column","total_record","loading","backdrop","keyboard","handleSubmit","loginAdmin","_token","Date","encrypt","getProfileAdmin","dt_user","cms","memberList","setMemberList","nama","status","Badge","email","phone","MemberService","postData","initData","id_category","category_name","img","categoryList","setCategoryList","textAlign","Figure","Image","height","alt","product_name","src","Caption","CategoryService","File","NoImg","id_banner","id_product","url","priority_number","bannerList","setBannerList","href","BannerService","onUserLoad","appLoadingState","updateAppLoading","isMenuSidebarCollapsed","menusidebarState","updateMenusidebarState","fetchProfile","getElementById","classList","remove","add","path","component","UserList","exact","Konsumen","Category","Banner","Members","loginByAuth","onUserLogin","isAuthLoading","setAuthLoading","AuthService","data-dismiss","block","rest","render","location","pathname","from","isAuthenticated","App","basename","window","substr","lastIndexOf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.9cb727e5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass MemberService {\r\n    postData(param, action) {         \r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/members\", param)\r\n            case \"VIEW_DETAIL\":\r\n                return axios.post(API_URL + \"/profile_member\", param)\r\n            default:\r\n                return axios.post(API_URL + \"/members\", param)\r\n        }\r\n    }\r\n}\r\nexport default new MemberService()","import MemberService from \"../members/MemberService\";\n\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const LOAD_USER = 'LOAD_USER';\nexport const GET_DATA = 'GET_DATA';\nexport const VIEW_DETAIL = 'VIEW_DETAIL';\n\nexport function getMembers(param) {\n    return (dispatch)=>{\n        MemberService.postData(param, GET_DATA).then(function (response) {\n            console.log(response);\n            dispatch({\n                type: GET_DATA, \n                payload: {\n                    data: response.data,\n                    errorMessage: false\n                }\n            })\n        }).catch(function (error) {\n            dispatch({\n                type: VIEW_DETAIL, \n                payload: {\n                    data: null,\n                    errorMessage: error\n                }\n            })\n        });\n    }\n}\n\n","import * as ActionTypes from '../actions';\n\nconst CryptoJS = require(\"crypto-js\");\nconst secretKey = process.env.REACT_APP_SECRET_KEY;\n\nlet dt = '';\nlet dt_res = '';\nlet _dt = '';\n\nconst initialState = {\n    isLoggedIn: !!localStorage.getItem('tokenCNI'),\n    token: localStorage.getItem('tokenCNI'),\n    currentUser: {\n        id_operator: null,\n        name: '',\n        password: null\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_USER:\n            dt = CryptoJS.AES.decrypt(action.token, secretKey);\n            dt_res = dt.toString(CryptoJS.enc.Utf8);\n            _dt = dt_res.split('Þ');\n            localStorage.setItem(\"tokenCNI\", action.token);\n            return {\n                ...state,\n                isLoggedIn: true,\n                token: action.token,\n                currentUser: {\n                    id_operator: _dt[0],\n                    name: _dt[1],\n                    password: null\n                }\n            };\n        case ActionTypes.LOGOUT_USER:\n            localStorage.removeItem('tokenCNI');\n            return {\n                ...state,\n                isLoggedIn: false,\n                token: null,\n                currentUser: {\n                    id_operator: null,\n                    name: '',\n                    password: null\n                }\n            };\n        case ActionTypes.LOAD_USER:\n            return {\n                ...state,\n                currentUser: action.currentUser\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\nconst initialState = {\n    getMemberList: null,\n    errorMessage: false\n};\n\nconst members = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.GET_DATA:\n            return {\n                ...state,\n                getMemberList: action.payload.data,\n                errorMessage: action.payload.errorMessage\n            };\n\n        case ActionTypes.VIEW_DETAIL:\n            return {\n                ...state,\n                currentUser: action.currentUser\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default members;\n","import {createStore, combineReducers} from 'redux';\r\nimport authReducer from './reducers/auth';\r\nimport membersReducer from './reducers/member';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    members:membersReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useHistory, Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Header = ({ toggleMenuSidebar, user, onUserLogout }) => {\r\n\r\n    const [dropdownState, updateDropdownState] = useState({\r\n        isDropdownOpen: false\r\n    });\r\n    const dropdownRef = useRef(null);\r\n    const history = useHistory();\r\n    const toggleDropdown = () => {\r\n        updateDropdownState({ isDropdownOpen: !dropdownState.isDropdownOpen });\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            dropdownRef &&\r\n            dropdownRef.current &&\r\n            !dropdownRef.current.contains(event.target)\r\n        ) {\r\n            updateDropdownState({ isDropdownOpen: false });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside, false);\r\n        return () => {\r\n            document.removeEventListener(\r\n                'mousedown',\r\n                handleClickOutside,\r\n                false\r\n            );\r\n        };\r\n    });\r\n\r\n    // let className = 'dropdown-menu dropdown-menu-lg dropdown-menu-right';\r\n\r\n    // if (dropdownState.isDropdownOpen) {\r\n    //     className += ' show';\r\n    // }\r\n\r\n    const logOut = (event) => {\r\n        toggleDropdown();\r\n        event.preventDefault();\r\n        onUserLogout();\r\n        history.push('/login');\r\n    };\r\n    return (\r\n        <nav className=\"main-header navbar navbar-expand navbar-dark navbar-info text-sm border-bottom-0\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"#\" className=\"nav-link\" data-widget=\"pushmenu\" role=\"button\">\r\n                        <i className=\"fas fa-bars\" />\r\n\r\n                    </NavLink>\r\n\r\n                </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <NavLink\r\n                        to=\"#\"\r\n                        onClick={toggleDropdown}\r\n                        type=\"button\"\r\n                        className=\"nav-link dropdown-toggle\"\r\n                        data-toggle=\"dropdown\">\r\n                        <i className=\"far fa-user\" /> {user.name ? (user.name) : (\"Logout\")}\r\n                    </NavLink>\r\n\r\n                    <div className=\"dropdown-menu\">\r\n                        <Link\r\n                            to=\"/\"\r\n                            onClick={logOut}\r\n                            className=\"dropdown-item\">\r\n                            <i className=\"fa fa-sign-out-alt\"></i> Logout\r\n                    </Link>\r\n\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onUserLogout: () => dispatch({ type: \"LOGOUT_USER\" })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nconst MenuSidebar = () => {\r\n    //const location = useLocation();\r\n    //console.log(location.pathname);\r\n    \r\n    return (\r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n            {/* Brand Logo */}\r\n            <NavLink to='/' className=\"brand-link text-center active\">\r\n                <span className=\"brand-text\"><strong>Admin CNI</strong></span>\r\n            </NavLink>\r\n\r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n\r\n                <nav className=\"mt-2\" style={{ marginTop: '1rem!important' }}>\r\n                    <ul className=\"nav nav-pills nav-sidebar flex-column text-sm\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                to='#'\r\n                                role=\"button\"\r\n                                className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-copy\" />\r\n                                <p>Data Pelanggan  <i className=\"right fas fa-angle-left\" /></p>\r\n                            </NavLink>\r\n\r\n                            <ul className=\"nav nav-treeview\">\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/members'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Members</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/konsumen'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Konsumen</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </li>\r\n\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                to='/category'\r\n                                className=\"nav-link\">\r\n                                <i className=\"nav-icon fa fa-bookmark\" />\r\n                                <p>Category</p>\r\n                            </NavLink>\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                to='/'\r\n                                className=\"nav-link\">\r\n                                <i className=\"nav-icon fa fa-bookmark\" />\r\n                                <p>Products</p>\r\n                            </NavLink>\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                to='#'\r\n                                role=\"button\"\r\n                                className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-copy\" />\r\n                                <p>Master Data  <i className=\"right fas fa-angle-left\" /></p>\r\n                            </NavLink>\r\n\r\n                            <ul className=\"nav nav-treeview\">\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/banners'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Banners</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/users'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Users</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MenuSidebar;\r\n","import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass AdminService {\r\n    postDataUsers(param, action) {         \r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/admin\", param)\r\n            case \"ADD_DATA\":\r\n                return axios.post(API_URL + \"/simpan_admin\", param)\r\n            case \"EDIT_DATA\":                \r\n                return axios.post(API_URL + \"/edit_admin\", param)\r\n            case \"DELETE_DATA\":\r\n                return axios.post(API_URL + \"/del_admin\", param)\r\n            default:\r\n                return axios.post(API_URL + \"/admin\", param)\r\n        }\r\n    }\r\n}\r\nexport default new AdminService()","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst icons = {\r\n    facebook: 'fab fa-facebook',\r\n    google: 'fab fa-google',\r\n    googlePlus: 'fab fa-google-plus',\r\n    sign: 'fa fa-unlock-alt',\r\n    edit: 'fa fa-edit',\r\n    delete : 'fa fa-trash'\r\n};\r\n\r\nconst AppButton = ({\r\n    children,\r\n    isLoading,\r\n    icon,\r\n    theme = 'primary',\r\n    disabled,\r\n    ...otherProps\r\n}) => {\r\n    let spinnerTemplate;\r\n    let iconTemplate;\r\n\r\n    if (isLoading) {\r\n        spinnerTemplate = (\r\n            <Spinner\r\n                className=\"ml-2\"\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n            />\r\n        );\r\n    }\r\n\r\n    if (icon && icons[icon]) {\r\n        iconTemplate = <i className={`${icons[icon]} mr-2`} />;\r\n    }\r\n\r\n    return (\r\n        // eslint-disable-next-line react/button-has-type\r\n        <Button\r\n            {...otherProps}\r\n            variant={theme}\r\n            disabled={isLoading || disabled}\r\n        >\r\n            {iconTemplate}\r\n            {children}\r\n            {spinnerTemplate}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default AppButton;\r\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Button from '../button/Button'\n\nconst AppModal = ({\n    children,\n    handleClose,\n    title,\n    isLoading,\n    form,\n    formSubmit,\n    titleButton,\n    themeButton,\n    ...otherProps\n}) => {\n    return (\n        // eslint-disable-next-line react/button-has-type\n        <Modal\n            {...otherProps}\n            onHide={handleClose}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{form}</Modal.Body>\n            <Modal.Footer>\n                <Button theme=\"info\" onClick={handleClose}>\n                    Close\n          </Button>\n                <Button\n                    isLoading={isLoading}\n                    theme={themeButton}\n                    onClick={formSubmit}\n                >\n                    {titleButton ? titleButton : \"Yes\"}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default AppModal;\n","import React from 'react';\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\n\r\nexport const AppSwalSuccess = ({\r\n    show,\r\n    children,\r\n    handleClose,\r\n    title,\r\n    type,\r\n    textBody,\r\n    formSubmit,\r\n    titleButton,\r\n    themeButton,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <SweetAlert\r\n            {...otherProps}\r\n            show={show}\r\n            type={type}\r\n            title={title}\r\n            text={textBody}\r\n            onConfirm={handleClose}\r\n            onCancel={handleClose}\r\n            onEscapeKey={handleClose}\r\n            onOutsideClick={handleClose}\r\n        />\r\n    );\r\n};\r\n\r\nexport const AppSwalConfirm = ({\r\n    show,\r\n    children,\r\n    handleClose,\r\n    title,\r\n    type,\r\n    textBody,\r\n    formSubmit,\r\n    titleButton,\r\n    themeButton,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <SweetAlert\r\n            {...otherProps}\r\n            show={show}\r\n            type={type}\r\n            title={title}\r\n            text={textBody}\r\n            onConfirm={handleClose}\r\n            onCancel={handleClose}\r\n            onEscapeKey={handleClose}\r\n            onOutsideClick={handleClose}\r\n        />\r\n    );\r\n};\r\n","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport AdminService from './AdminService';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport AppModal from '../components/modal/MyModal';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\n\r\n\r\n// export const ToastDemo = ({ content }) => {\r\n//     const { addToast } = useToasts()\r\n//     return (\r\n//         <Button onClick={() => addToast(content, {\r\n//             appearance: 'success',\r\n//             autoDismiss: true,\r\n//         })}>\r\n//             Add Toast\r\n//         </Button>\r\n//     )\r\n// }\r\n\r\nconst UserList = (auth) => {\r\n\r\n    const initAdmin = { id_admin: '', username: '', pass: '', name: '' };\r\n    const [selected, setSelected] = useState(initAdmin);\r\n    const [admin, setAdmin] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"name\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [deleteForm, setdeleteForm] = useState(false);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [actionForm, setActionForm] = useState(null);\r\n    const [showSwalSuccess, setshowSwalSuccess] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setdeleteForm(false);\r\n    };\r\n\r\n    const closeSwal = () => {\r\n        setshowSwalSuccess(false);\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => ((pageNumb - 1) * pageSize) + index + 1 + '.',\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"name\",\r\n            text: \"Name\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"username\",\r\n            text: \"Username\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 122,\r\n            sortable: false,\r\n            cell: record => {\r\n                return (\r\n                    <Fragment>\r\n                        <button\r\n                            className=\"btn btn-xs btn-success\"\r\n                            onClick={e => editRecord(record)}\r\n                            style={{ marginRight: '5px' }}>\r\n                            <i className=\"fa fa-edit\"></i> Edit\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-danger btn-xs\"\r\n                            onClick={() => deleteRecord(record)}>\r\n                            <i className=\"fa fa-trash\"></i> Delete\r\n                        </button>\r\n                    </Fragment>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_admin',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    const editRecord = (record) => {\r\n        setSelected(record)\r\n        setShow(true);\r\n        setActionForm(\"EDIT_DATA\")\r\n    }\r\n\r\n    const deleteRecord = (record) => {\r\n        setSelected(record)\r\n        setdeleteForm(true);\r\n        setActionForm(\"DELETE_DATA\")\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        AdminService.postDataUsers(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setAdmin(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setAdmin([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSave = async (userPost) => {\r\n        let err_code = '';\r\n        let contentSwal = '-';\r\n        setLoading(true);\r\n        setErrMsg(null);\r\n        if (actionForm === \"ADD_DATA\") {\r\n            userPost.created_by = auth.user.id_operator;\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil ditambahkan</div>' }} />;\r\n        }\r\n        if (actionForm === \"EDIT_DATA\") {\r\n            userPost.updated_by = auth.user.id_operator;\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong style=\"font-size:24px;\">Success</strong>, Data berhasil diubah</div>' }} />;\r\n        }\r\n        if (actionForm === \"DELETE_DATA\") {\r\n            userPost = {};\r\n            userPost = {\r\n                id_admin: selected.id_admin,\r\n                deleted_by: auth.user.id_operator\r\n            }\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil dihapus</div>' }} />;\r\n        }\r\n        await AdminService.postDataUsers(userPost, actionForm).then((res) => {\r\n            err_code = res.data.err_code;\r\n            setLoading(false);\r\n            if (err_code !== '00') {\r\n                setErrMsg(res.data.err_msg);\r\n                return;\r\n            } else {\r\n                setShow(false);\r\n                setdeleteForm(false);\r\n                setErrMsg(contentSwal);\r\n                setshowSwalSuccess(true);\r\n            }\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            setErrMsg(error)\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: selected,\r\n        enableReinitialize: true,\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n                .required('Please enter fullname'),\r\n            username: Yup.string()\r\n                .required('Please enter username'),\r\n            pass: Yup.string()\r\n                .required('Please provide a password')\r\n        }),\r\n        onSubmit: (values, { setSubmitting, resetForm }) => {\r\n            setActionForm(\"ADD_DATA\");\r\n            handleSave(values);\r\n            resetForm({});\r\n            setSubmitting(false);\r\n        },\r\n        onReset: (values, { setSubmitting, resetForm }) => {\r\n            setSubmitting(false);\r\n        }\r\n    });\r\n\r\n    const discardChanges = () => {\r\n        setSelected(initAdmin);\r\n        formik.resetForm();\r\n        setShow(true);\r\n    }\r\n\r\n    const frmUser = <Form id=\"myForm\">\r\n        {/* <div className=\"alert alert-danger alert-sm\">\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n            <span className=\"fw-semi-bold\">Error:</span> Login failed.\r\n        </div> */}\r\n        <Form.Group controlId=\"id_admin\">\r\n            <Form.Control type=\"hidden\" {...formik.getFieldProps('id_admin')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"fullname\">\r\n            <Form.Label>Fullname</Form.Label>\r\n            {formik.touched.name && formik.errors.name ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.name}</span>) : null}\r\n            <Form.Control name=\"name\" size=\"sm\" value=\"test val\" type=\"text\" placeholder=\"Fullname\" {...formik.getFieldProps('name')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            {formik.touched.username && formik.errors.username ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.username}</span>) : null}\r\n            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Username\" {...formik.getFieldProps('username')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            {formik.touched.pass && formik.errors.pass ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.pass}</span>) : null}\r\n            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Password\" {...formik.getFieldProps('pass')} />\r\n        </Form.Group>\r\n    </Form>;\r\n\r\n    const contentDelete = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:18px; text-align:center;\">Apakah anda yakin <br/>menghapus data ini ?</div>' }} />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Dashboard</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n                                    <div className=\"card-header\">\r\n                                        <Button variant=\"success\" onClick={discardChanges}><i className=\"fa fa-plus\"></i> Add</Button>\r\n                                        {/* <ToastProvider\r\n                                            placement=\"bottom-right\" autoDismiss\r\n                                            autoDismissTimeout={2000}\r\n                                            TransitionState=\"exiting\"\r\n                                        >\r\n                                            <ToastDemo content=\"Data Berhasil disimpan\" />\r\n                                        </ToastProvider> */}\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {admin ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={admin}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>Loading...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <AppModal\r\n                    show={show}\r\n                    size=\"sm\"\r\n                    form={frmUser}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Add/Edit User\"\r\n                    titleButton=\"Save change\"\r\n                    themeButton=\"success\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={formik.handleSubmit}\r\n                ></AppModal>\r\n\r\n                <AppSwalSuccess\r\n                    show={showSwalSuccess}\r\n                    title={errMsg}\r\n                    type=\"success\"\r\n                    handleClose={closeSwal}\r\n                >\r\n                </AppSwalSuccess>\r\n\r\n                <AppModal\r\n                    show={deleteForm}\r\n                    size=\"sm\"\r\n                    form={contentDelete}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Delete User\"\r\n                    titleButton=\"Delete User\"\r\n                    themeButton=\"danger\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSave}\r\n                ></AppModal>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\nexport default connect(mapStateToProps, '')(UserList);\r\n\r\n","import axios from \"axios\";\r\nimport Moment from \"react-moment\"\r\n\r\nconst API_URL = process.env.REACT_APP_URL_API;\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst secretKey = process.env.REACT_APP_SECRET_KEY;;\r\n\r\nexport const loginAdmin = async (username, pass) => {\r\n    const param = {\r\n        username: username,\r\n        pass: pass\r\n    };\r\n    let token = '';\r\n    await axios.post(API_URL + '/login_admin', param).then(res => {\r\n        const response = res.data;\r\n        if (response.err_code === '00') {\r\n            let data = response.data;\r\n            let id_admin = data.id_admin;\r\n            let name = data.name;\r\n            let tgl = new Date();\r\n            const _token = id_admin + 'Þ' + name + 'Þ' + tgl;\r\n            token = CryptoJS.AES.encrypt(_token, secretKey).toString();\r\n        } else {\r\n            token = '';\r\n        }\r\n    });\r\n    return token;\r\n}\r\n\r\nexport const getProfileAdmin = async () => {\r\n    const token = localStorage.getItem('tokenCNI');\r\n    const dt = CryptoJS.AES.decrypt(token, secretKey);\r\n    const dt_res = dt.toString(CryptoJS.enc.Utf8);\r\n    const _dt = dt_res.split('Þ');\r\n    let dt_user = {\r\n        id_operator: null,\r\n        name: '',\r\n        password: null\r\n    };\r\n    const param = {\r\n        id_admin: _dt[0],\r\n        cms: 1\r\n    };\r\n    await axios.post(API_URL + '/admin_detail', param).then(res => {\r\n        const response = res.data;\r\n        if (response.err_code === '00') {\r\n            let data = response.data;\r\n            dt_user = {\r\n                id_operator: data.id_admin,\r\n                name: data.name,\r\n                password: null\r\n            };\r\n        }\r\n    });\r\n    return dt_user;\r\n}","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { Badge } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport MemberService from './MemberService';\r\n\r\nconst Members = (auth) => {\r\n    const initAdmin = { id_admin: '', username: '', pass: '', name: '' };\r\n    const [selected, setSelected] = useState(initAdmin);\r\n    const [memberList, setMemberList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"name\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n\r\n\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        MemberService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setMemberList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setMemberList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => ((pageNumb - 1) * pageSize) + index + 1 + '.',\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"cni_id\",\r\n            text: \"CNI ID\",\r\n            sortable: true,\r\n            cell: record => {\r\n                return (<Fragment> {record.nama} <br />\r\n                    {record.status === 1 ? (<Badge variant=\"success\">Verified</Badge>) : ''}\r\n                </Fragment>)\r\n            }\r\n        },\r\n        {\r\n            key: \"nama\",\r\n            text: \"Fullname\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"email\",\r\n            text: \"Contact\",\r\n            sortable: false,\r\n            cell: record => { return (<Fragment> {record.email} <br /><b>Phone</b> : {record.phone}</Fragment>) }\r\n        },\r\n        {\r\n            key: \"ewallet\",\r\n            text: \"e-Wallet\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 80,\r\n            sortable: false,\r\n            align: \"center\",\r\n            cell: record => {\r\n                return (\r\n                    <Fragment>\r\n                        <button disabled\r\n                            className=\"btn btn-xs btn-info\"\r\n                            onClick={e => editRecord(record)}\r\n                            style={{ marginRight: '5px' }}>\r\n                            <i className=\"fa fa-eye\"></i> View\r\n                        </button>\r\n\r\n                    </Fragment>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_member',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize,\r\n            type: 1\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const editRecord = (record) => {\r\n        setSelected(record)\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Members</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {memberList ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={memberList}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>Loading...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser,\r\n});\r\nexport default connect(mapStateToProps, '')(Members);","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { connect } from 'react-redux';\r\nimport MemberService from './MemberService';\r\n\r\nconst Members = (auth) => {\r\n    const initAdmin = { id_admin: '', username: '', pass: '', name: '' };\r\n    const [selected, setSelected] = useState(initAdmin);\r\n    const [memberList, setMemberList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"name\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n    \r\n\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        MemberService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setMemberList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setMemberList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => ((pageNumb - 1) * pageSize) + index + 1 + '.',\r\n            row: 0\r\n        },\r\n        \r\n        {\r\n            key: \"nama\",\r\n            text: \"Fullname\",\r\n            sortable: true,\r\n            cell: record => {\r\n                return (<Fragment> {record.nama} <br />\r\n                    {record.status === 1 ? (<span className=\"badge badge-success\">Verified</span>) : ''}\r\n                </Fragment>)\r\n            }\r\n        },\r\n        {\r\n            key: \"email\",\r\n            text: \"Contact\",\r\n            sortable: false,\r\n            cell: record => { return (<Fragment> {record.email} <br /><b>Phone</b> : {record.phone}</Fragment>) }\r\n        },\r\n        {\r\n            key: \"ewallet\",\r\n            text: \"e-Wallet\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 80,\r\n            sortable: false,\r\n            align: \"center\",\r\n            cell: record => {\r\n                return (\r\n                    <Fragment>\r\n                        <button disabled\r\n                            className=\"btn btn-xs btn-info\"\r\n                            onClick={e => editRecord(record)}\r\n                            style={{ marginRight: '5px' }}>\r\n                            <i className=\"fa fa-eye\"></i> View\r\n                        </button>\r\n\r\n                    </Fragment>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_member',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize,\r\n            type:2\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const editRecord = (record) => {\r\n        setSelected(record)        \r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Konsumen</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {memberList ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={memberList}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>Loading...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser,\r\n});\r\nexport default connect(mapStateToProps, '')(Members);","import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass CategoryService {\r\n    postData(param, action) {       \r\n        \r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/category\", param)\r\n            case \"ADD_DATA\":\r\n                return axios.post(API_URL + \"/simpan_category\", param)\r\n            case \"EDIT_DATA\":                \r\n                return axios.post(API_URL + \"/simpan_category\", param)\r\n            case \"DELETE_DATA\":\r\n                return axios.post(API_URL + \"/del_category\", param)\r\n            default:\r\n                return axios.post(API_URL + \"/category\", param)\r\n        }\r\n    }\r\n}\r\nexport default new CategoryService()","export default __webpack_public_path__ + \"static/media/no_photo.027652b1.jpg\";","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport CategoryService from './CategoryService';\r\nimport { Button, Form, Figure } from 'react-bootstrap';\r\nimport AppModal from '../components/modal/MyModal';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\nimport NoImg from '../assets/no_photo.jpg'\r\n\r\nconst Category = (auth) => {\r\n\r\n    const initData = { id_category: '', category_name: '', img: '' };\r\n    const [selected, setSelected] = useState(initData);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"category_name\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [deleteForm, setdeleteForm] = useState(false);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [actionForm, setActionForm] = useState(null);\r\n    const [showSwalSuccess, setshowSwalSuccess] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setdeleteForm(false);\r\n    };\r\n\r\n    const closeSwal = () => {\r\n        setshowSwalSuccess(false);\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => <div style={{ textAlign: \"center\" }}>{((pageNumb - 1) * pageSize) + index + 1 + '.'}</div>,\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"category_name\",\r\n            text: \"Category\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"img\",\r\n            text: \"Image\",\r\n            sortable: false,\r\n            width: 250,\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Figure>\r\n                            <Figure.Image\r\n                                width={171}\r\n                                height={180}\r\n                                alt={record.product_name}\r\n                                src={record.img}\r\n                            />\r\n\r\n                            <Figure.Caption>\r\n                                {record.product_name}\r\n                            </Figure.Caption>\r\n                        </Figure></div>)\r\n            }\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 122,\r\n            sortable: false,\r\n            cell: record => {\r\n                return (\r\n                    <Fragment>\r\n                        <button disabled\r\n                            className=\"btn btn-xs btn-success\"\r\n                            onClick={e => editRecord(record)}\r\n                            style={{ marginRight: '5px' }}>\r\n                            <i className=\"fa fa-edit\"></i> Edit\r\n                        </button>\r\n                        <button disabled\r\n                            className=\"btn btn-danger btn-xs\"\r\n                            onClick={() => deleteRecord(record)}>\r\n                            <i className=\"fa fa-trash\"></i> Delete\r\n                        </button>\r\n                    </Fragment>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_category',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    const editRecord = (record) => {\r\n        console.log(record);\r\n        setSelected(record)\r\n        setShow(true);\r\n        setActionForm(\"EDIT_DATA\")\r\n    }\r\n\r\n    const deleteRecord = (record) => {\r\n        setSelected(record)\r\n        setdeleteForm(true);\r\n        setActionForm(\"DELETE_DATA\")\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        CategoryService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setCategoryList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setCategoryList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSave = async (userPost) => {\r\n        let err_code = '';\r\n        let contentSwal = '-';\r\n        setLoading(true);\r\n        setErrMsg(null);\r\n        if (actionForm === \"ADD_DATA\") {\r\n            userPost.created_by = auth.user.id_operator;\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil ditambahkan</div>' }} />;\r\n        }\r\n        if (actionForm === \"EDIT_DATA\") {\r\n            userPost.updated_by = auth.user.id_operator;\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong style=\"font-size:24px;\">Success</strong>, Data berhasil diubah</div>' }} />;\r\n        }\r\n        if (actionForm === \"DELETE_DATA\") {\r\n            userPost = {};\r\n            userPost = {\r\n                id_category: selected.id_category,\r\n                deleted_by: auth.user.id_operator\r\n            }\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil dihapus</div>' }} />;\r\n        }\r\n        await CategoryService.postData(userPost, actionForm).then((res) => {\r\n            err_code = res.data.err_code;\r\n            setLoading(false);\r\n            if (err_code !== '00') {\r\n                setErrMsg(res.data.err_msg);\r\n                return;\r\n            } else {\r\n                setShow(false);\r\n                setdeleteForm(false);\r\n                setErrMsg(contentSwal);\r\n                setshowSwalSuccess(true);\r\n            }\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            setErrMsg(error)\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const discardChanges = () => {\r\n        setSelected(initData);        \r\n        setShow(true);\r\n    }\r\n\r\n    const frmUser = <Form id=\"myForm\">\r\n        \r\n        <Form.Group controlId=\"id_category\">\r\n            <Form.Control type=\"hidden\"/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"category_name\">\r\n            <Form.Label>Category</Form.Label>\r\n           \r\n            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Category\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"username\">\r\n            <Form.Label>Image</Form.Label>\r\n\r\n            <Form.File size=\"sm\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"username\">\r\n            <Figure>\r\n                <Figure.Image\r\n                    width={160}\r\n                    height={100}\r\n                    alt=\"\"\r\n                    src={NoImg}\r\n                />\r\n\r\n\r\n            </Figure>\r\n        </Form.Group>\r\n\r\n    </Form>;\r\n\r\n    const contentDelete = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:18px; text-align:center;\">Apakah anda yakin <br/>menghapus data ini ?</div>' }} />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Category</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n                                    <div className=\"card-header\">\r\n                                        <Button disabled variant=\"success\" onClick={discardChanges}><i className=\"fa fa-plus\"></i> Add</Button>\r\n                                        {/* <ToastProvider\r\n                                            placement=\"bottom-right\" autoDismiss\r\n                                            autoDismissTimeout={2000}\r\n                                            TransitionState=\"exiting\"\r\n                                        >\r\n                                            <ToastDemo content=\"Data Berhasil disimpan\" />\r\n                                        </ToastProvider> */}\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {categoryList ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={categoryList}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>No Data...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <AppModal\r\n                    show={show}\r\n\r\n                    form={frmUser}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Add/Edit Category\"\r\n                    titleButton=\"Save change\"\r\n                    themeButton=\"success\"\r\n                    isLoading={isLoading}\r\n                    \r\n                ></AppModal>\r\n\r\n                <AppSwalSuccess\r\n                    show={showSwalSuccess}\r\n                    title={errMsg}\r\n                    type=\"success\"\r\n                    handleClose={closeSwal}\r\n                >\r\n                </AppSwalSuccess>\r\n\r\n                <AppModal\r\n                    show={deleteForm}\r\n                    size=\"sm\"\r\n                    form={contentDelete}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Delete User\"\r\n                    titleButton=\"Delete User\"\r\n                    themeButton=\"danger\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSave}\r\n                ></AppModal>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\nexport default connect(mapStateToProps, '')(Category);\r\n\r\n","import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass CategoryService {\r\n    postData(param, action) {         \r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/banner\", param)\r\n            case \"ADD_DATA\":\r\n                return axios.post(API_URL + \"/simpan_banner\", param)\r\n            case \"EDIT_DATA\":                \r\n                return axios.post(API_URL + \"/simpan_banner\", param)\r\n            case \"DELETE_DATA\":\r\n                return axios.post(API_URL + \"/del_banner\", param)\r\n            default:\r\n                return axios.post(API_URL + \"/banner\", param)\r\n        }\r\n    }\r\n}\r\nexport default new CategoryService()","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport BannerService from './BannerService';\r\nimport { Button, Form, Figure } from 'react-bootstrap';\r\nimport AppModal from '../components/modal/MyModal';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\n\r\n\r\n// export const ToastDemo = ({ content }) => {\r\n//     const { addToast } = useToasts()\r\n//     return (\r\n//         <Button onClick={() => addToast(content, {\r\n//             appearance: 'success',\r\n//             autoDismiss: true,\r\n//         })}>\r\n//             Add Toast\r\n//         </Button>\r\n//     )\r\n// }\r\n\r\nconst Banner = (auth) => {\r\n\r\n    const initData = { id_banner: '', id_product: '', img: '', type: '', url: '', priority_number: '' };\r\n    const [selected, setSelected] = useState(initData);\r\n    const [bannerList, setBannerList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"priority_number\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [deleteForm, setdeleteForm] = useState(false);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [actionForm, setActionForm] = useState(null);\r\n    const [showSwalSuccess, setshowSwalSuccess] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setdeleteForm(false);\r\n    };\r\n\r\n    const closeSwal = () => {\r\n        setshowSwalSuccess(false);\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => <div style={{ textAlign: \"center\" }}>{((pageNumb - 1) * pageSize) + index + 1 + '.'}</div>,\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"priority_number\",\r\n            text: \"Priorty\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"img\",\r\n            text: \"Image\",\r\n            sortable: false,\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Figure>\r\n                            <Figure.Image\r\n                                width={171}\r\n                                height={180}\r\n                                alt={record.type === 1 ? record.product_name : <a href={record.url} target=\"_blank\">{record.url}</a>}\r\n                                src={record.img}\r\n                            />\r\n                            <Figure.Caption>\r\n                                {record.type === 1 ? record.product_name : <a href={record.url} target=\"_blank\">{record.url}</a>}\r\n                            </Figure.Caption>\r\n                        </Figure></div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 170,\r\n            sortable: false,\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Fragment>\r\n                            <button disabled\r\n                                className=\"btn btn-xs btn-success\"\r\n                                onClick={e => editRecord(record)}\r\n                                style={{ marginRight: '5px' }}>\r\n                                <i className=\"fa fa-edit\"></i> Edit\r\n                        </button>\r\n                            <button disabled\r\n                                className=\"btn btn-danger btn-xs\"\r\n                                onClick={() => deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i> Delete\r\n                        </button>\r\n                        </Fragment>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_banner',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    const editRecord = (record) => {\r\n        setSelected(record)\r\n        setShow(true);\r\n        setActionForm(\"EDIT_DATA\")\r\n    }\r\n\r\n    const deleteRecord = (record) => {\r\n        setSelected(record)\r\n        setdeleteForm(true);\r\n        setActionForm(\"DELETE_DATA\")\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        BannerService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setBannerList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setBannerList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSave = async (userPost) => {\r\n        let err_code = '';\r\n        let contentSwal = '-';\r\n        setLoading(true);\r\n        setErrMsg(null);\r\n        if (actionForm === \"ADD_DATA\") {\r\n            userPost.created_by = auth.user.id_operator;\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil ditambahkan</div>' }} />;\r\n        }\r\n        if (actionForm === \"EDIT_DATA\") {\r\n            userPost.updated_by = auth.user.id_operator;\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong style=\"font-size:24px;\">Success</strong>, Data berhasil diubah</div>' }} />;\r\n        }\r\n        if (actionForm === \"DELETE_DATA\") {\r\n            userPost = {};\r\n            userPost = {\r\n                id_banner: selected.id_banner,\r\n                deleted_by: auth.user.id_operator\r\n            }\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil dihapus</div>' }} />;\r\n        }\r\n        await BannerService.postData(userPost, actionForm).then((res) => {\r\n            err_code = res.data.err_code;\r\n            setLoading(false);\r\n            if (err_code !== '00') {\r\n                setErrMsg(res.data.err_msg);\r\n                return;\r\n            } else {\r\n                setShow(false);\r\n                setdeleteForm(false);\r\n                setErrMsg(contentSwal);\r\n                setshowSwalSuccess(true);\r\n            }\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            setErrMsg(error)\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: selected,\r\n        enableReinitialize: true,\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n                .required('Please enter fullname'),\r\n            username: Yup.string()\r\n                .required('Please enter username'),\r\n            pass: Yup.string()\r\n                .required('Please provide a password')\r\n        }),\r\n        onSubmit: (values, { setSubmitting, resetForm }) => {\r\n            setActionForm(\"ADD_DATA\");\r\n            handleSave(values);\r\n            resetForm({});\r\n            setSubmitting(false);\r\n        },\r\n        onReset: (values, { setSubmitting, resetForm }) => {\r\n            setSubmitting(false);\r\n        }\r\n    });\r\n\r\n    const discardChanges = () => {\r\n        setSelected(initData);\r\n        formik.resetForm();\r\n        setShow(true);\r\n    }\r\n\r\n    const frmUser = <Form id=\"myForm\">\r\n        {/* <div className=\"alert alert-danger alert-sm\">\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n            <span className=\"fw-semi-bold\">Error:</span> Login failed.\r\n        </div> */}\r\n        <Form.Group controlId=\"id_admin\">\r\n            <Form.Control type=\"hidden\" {...formik.getFieldProps('id_admin')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"fullname\">\r\n            <Form.Label>Type</Form.Label>\r\n            {formik.touched.name && formik.errors.name ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.name}</span>) : null}\r\n            <Form.Control name=\"name\" size=\"sm\" value=\"test val\" type=\"text\" placeholder=\"Fullname\" {...formik.getFieldProps('name')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"username\">\r\n            <Form.Label>Web URL</Form.Label>\r\n            {formik.touched.username && formik.errors.username ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.username}</span>) : null}\r\n            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Username\" {...formik.getFieldProps('username')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n            <Form.Label>Product</Form.Label>\r\n            {formik.touched.pass && formik.errors.pass ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.pass}</span>) : null}\r\n            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Password\" {...formik.getFieldProps('pass')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n            <Form.Label>Image</Form.Label>\r\n            {formik.touched.pass && formik.errors.pass ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.pass}</span>) : null}\r\n            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Password\" {...formik.getFieldProps('pass')} />\r\n        </Form.Group>\r\n    </Form>;\r\n\r\n    const contentDelete = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:18px; text-align:center;\">Apakah anda yakin <br/>menghapus data ini ?</div>' }} />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Banner</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n                                    <div className=\"card-header\">\r\n                                        <Button disabled variant=\"success\" onClick={discardChanges}><i className=\"fa fa-plus\"></i> Add</Button>\r\n                                        {/* <ToastProvider\r\n                                            placement=\"bottom-right\" autoDismiss\r\n                                            autoDismissTimeout={2000}\r\n                                            TransitionState=\"exiting\"\r\n                                        >\r\n                                            <ToastDemo content=\"Data Berhasil disimpan\" />\r\n                                        </ToastProvider> */}\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {bannerList ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={bannerList}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>No Data...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <AppModal\r\n                    show={show}\r\n                    size=\"sm\"\r\n                    form={frmUser}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Add/Edit User\"\r\n                    titleButton=\"Save change\"\r\n                    themeButton=\"success\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={formik.handleSubmit}\r\n                ></AppModal>\r\n\r\n                <AppSwalSuccess\r\n                    show={showSwalSuccess}\r\n                    title={errMsg}\r\n                    type=\"success\"\r\n                    handleClose={closeSwal}\r\n                >\r\n                </AppSwalSuccess>\r\n\r\n                <AppModal\r\n                    show={deleteForm}\r\n                    size=\"sm\"\r\n                    form={contentDelete}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Delete User\"\r\n                    titleButton=\"Delete User\"\r\n                    themeButton=\"danger\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSave}\r\n                ></AppModal>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\nexport default connect(mapStateToProps, '')(Banner);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from './Header'\r\nimport MenuSidebar from './MenuSidebar'\r\nimport { connect } from 'react-redux';\r\nimport UserList from '../../users/UserList';\r\nimport { getProfileAdmin } from '../login/LoginService';\r\nimport Members from '../../members/Members';\r\nimport Konsumen from '../../members/Konsumen';\r\nimport Category from '../../category/Category';\r\nimport Banner from '../../banners/Banner';\r\n\r\nconst Main = ({ onUserLoad }) => {\r\n\r\n    const [appLoadingState, updateAppLoading] = useState(false);\r\n    const [menusidebarState, updateMenusidebarState] = useState({\r\n        isMenuSidebarCollapsed: false\r\n    });\r\n\r\n    const toggleMenuSidebar = () => {\r\n        updateMenusidebarState({\r\n            isMenuSidebarCollapsed: !menusidebarState.isMenuSidebarCollapsed\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateAppLoading(true);\r\n        const fetchProfile = async () => {\r\n            try {\r\n                const response = await getProfileAdmin();\r\n                onUserLoad({ ...response });\r\n                updateAppLoading(false);\r\n            } catch (error) {\r\n                updateAppLoading(false);\r\n            }\r\n        };\r\n        fetchProfile();\r\n        updateAppLoading(false);\r\n        return () => { };\r\n    }, [onUserLoad]);\r\n\r\n    document.getElementById('root').classList.remove('login-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n\r\n    document.getElementById('root').className += ' sidebar-mini';\r\n\r\n    if (menusidebarState.isMenuSidebarCollapsed) {\r\n        document.getElementById('root').classList.add('sidebar-collapse');\r\n        document.getElementById('root').classList.remove('sidebar-open');\r\n        document.getElementById('root').classList.add('active');\r\n    } else {\r\n        document.getElementById('root').classList.remove('active');\r\n        document.getElementById('root').classList.add('sidebar-open');\r\n        document.getElementById('root').classList.remove('sidebar-collapse');\r\n    }\r\n\r\n    let template;\r\n\r\n    if (appLoadingState) {\r\n        template = 'Running ....';\r\n    } else {\r\n        template = (\r\n            <>\r\n                <Header toggleMenuSidebar={toggleMenuSidebar} />\r\n\r\n                <MenuSidebar />\r\n\r\n                <Switch>\r\n                    <Route path=\"/users\" component={UserList} />\r\n                    <Route exact path=\"/konsumen\" component={Konsumen} />\r\n                    <Route path=\"/category\" component={Category} />\r\n                    <Route path=\"/banners\" component={Banner} />\r\n                    <Route path=\"/members\" component={Members} />\r\n                </Switch>\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    return template;\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onUserLoad: (user) =>\r\n        dispatch({ type: \"LOAD_USER\", currentUser: user })\r\n});\r\n\r\nexport default connect('', mapDispatchToProps)(Main);\r\n","import { loginAdmin } from '../components/login/LoginService'\nexport const loginByAuth = async (username, password) => {\n    const token = await loginAdmin(username,password);\n    localStorage.setItem('tokenCNI', token);\n    document.getElementById('root').classList.remove('login-page');\n    document.getElementById('root').classList.remove('hold-transition');\n    return token;\n};\n\n// export const registerByAuth = async (email, password) => {\n//     const token = await Gatekeeper.registerByAuth(email, password);\n//     localStorage.setItem('token', token);\n//     document.getElementById('root').classList.remove('register-page');\n//     document.getElementById('root').classList.remove('hold-transition');\n//     return token;\n// };\n\n// export const loginByGoogle = async () => {\n//     const token = await Gatekeeper.loginByGoogle();\n//     localStorage.setItem('token', token);\n//     document.getElementById('root').classList.remove('login-page');\n//     document.getElementById('root').classList.remove('hold-transition');\n//     return token;\n// };\n\n// export const registerByGoogle = async () => {\n//     const token = await Gatekeeper.registerByGoogle();\n//     localStorage.setItem('token', token);\n//     document.getElementById('root').classList.remove('register-page');\n//     document.getElementById('root').classList.remove('hold-transition');\n//     return token;\n// };\n\n// const asyncFacebookGetLoginStatus = () => {\n//     return new Promise((resolve, reject) => {\n//         addFacebookScript()\n//             .then(() => {\n//                 const params = {\n//                     appId: '243170807046422',\n//                     cookie: false,\n//                     xfbml: false,\n//                     version: 'v3.2'\n//                 };\n//                 window.FB.init(params);\n//                 window.FB.getLoginStatus((data) => {\n//                     if (data.status === 'connected') {\n//                         resolve(data.authResponse.accessToken);\n//                     }\n//                     resolve(null);\n//                 });\n//             })\n//             .catch(() => reject(new Error('ADD_SCRIPT_ERROR')));\n//     });\n// };\n\n// const asyncFacebookLogin = () => {\n//     return new Promise((resolve, reject) => {\n//         window.FB.login(\n//             (data) => {\n//                 if (data.status === 'connected') {\n//                     resolve(data.authResponse.accessToken);\n//                 }\n//                 reject(new Error('FACEBOOK_ERROR'));\n//             },\n//             {scope: 'email'}\n//         );\n//     });\n// };\n\n// export const loginByFacebook = () => {\n//     return asyncFacebookGetLoginStatus()\n//         .then((accessToken) => {\n//             if (accessToken) {\n//                 return Promise.resolve(accessToken);\n//             }\n//             return asyncFacebookLogin();\n//         })\n//         .then((accessToken) => {\n//             return axios.post('/v1/facebook/login', {\n//                 accessToken\n//             });\n//         })\n//         .then((response) => {\n//             localStorage.setItem('token', response.data.token);\n//             document.getElementById('root').classList.remove('login-page');\n//             document.getElementById('root').classList.remove('hold-transition');\n//             return Promise.resolve(response.data.token);\n//         });\n// };\n\n// export const registerByFacebook = () => {\n//     return asyncFacebookGetLoginStatus()\n//         .then((accessToken) => {\n//             if (accessToken) {\n//                 return Promise.resolve(accessToken);\n//             }\n//             return asyncFacebookLogin();\n//         })\n//         .then((accessToken) => {\n//             return axios.post('/v1/facebook/register', {\n//                 accessToken\n//             });\n//         })\n//         .then((response) => {\n//             localStorage.setItem('token', response.data.token);\n//             document.getElementById('root').classList.remove('register-page');\n//             document.getElementById('root').classList.remove('hold-transition');\n//             return Promise.resolve(response.data.token);\n//         });\n// };\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\n\nimport * as AuthService from '../../services/auth';\nimport Button from '../../components/button/Button';\n\nconst Login = ({ onUserLogin }) => {\n    const [isAuthLoading, setAuthLoading] = useState(false);\n    const [errMsg, setErrMsg] = useState('');\n    const history = useHistory();\n\n    const login = (username, password) => {\n        setAuthLoading(true);\n        setErrMsg(null);\n        AuthService.loginByAuth(username, password)\n            .then((token) => {\n                if (token) {\n                    //console.log(token);\n                    //toast.success('Login is succeed!');\n                    setAuthLoading(false);\n                    onUserLogin(token);\n                    history.push('/');\n                } else {\n                    setErrMsg('Username dan Password tidak sesuai')\n                    setAuthLoading(false);\n                }\n            })\n            .catch((error) => {\n                setAuthLoading(false);\n                setErrMsg(error)\n                // toast.error(\n                //     (error.response &&\n                //         error.response.data &&\n                //         error.response.data.message) ||\n                //     ''\n                //);\n            });\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            pass: ''\n        },\n        validationSchema: Yup.object({\n            username: Yup.string()\n                .required('Please enter username'),\n            pass: Yup.string()\n                .required('Please provide a password')\n        }),\n        onSubmit: (values) => {\n            login(values.username, values.pass);\n        }\n    });\n    const hideAlert = () => { setErrMsg(null) }\n    document.getElementById('root').classList = 'hold-transition login-page';\n\n    return (\n        <div className=\"login-box\">\n            <div className=\"card card-outline card-primary\">\n                <div className=\"card-header text-center h1\">\n                    <b>CNI</b>\n                </div>\n                <div className=\"card-body\">\n\n                    {errMsg ? (\n                        <div className=\"alert alert-danger alert-sm\">\n                            <button onClick={hideAlert} type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\n                            <span className=\"fw-semi-bold text-error-login\">Error: {errMsg}</span>\n                        </div>\n                    ) : (<p className='login-box-msg'>Sign in to start your session</p>)}\n\n                    <form onSubmit={formik.handleSubmit}>\n                        {formik.touched.username && formik.errors.username ? (\n                            <span className=\"float-right text-error badge badge-danger\">{formik.errors.username}</span>\n                        ) : null}\n                        <div className=\"input-group mb-3\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Username\"\n                                {...formik.getFieldProps('username')} />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fas fa-user\" />\n                                </div>\n                            </div>\n\n                        </div>\n\n                        {formik.touched.pass &&\n                            formik.errors.pass ? (\n                            <span className=\"float-right text-error badge badge-danger\">{formik.errors.pass}</span>\n                        ) : null}\n                        <div className=\"input-group mb-3\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                {...formik.getFieldProps('pass')} />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fas fa-lock\" />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"social-auth-links text-center mt-2 mb-3\">\n                            <Button\n                                block\n                                type=\"submit\"\n                                isLoading={isAuthLoading}\n                                icon=\"sign\"\n                                theme=\"primary\"\n                            >\n                                Sign in\n                        </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLogin: (token) => dispatch({ type: \"LOGIN_USER\", token })\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nconst ProtectedRoute = ({ children, isLoggedIn, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => ({    \r\n    isLoggedIn: state.auth.isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProtectedRoute);","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst PublicRoute = ({children, isLoggedIn, ...rest}) => {\n    const isAuthenticated = isLoggedIn || localStorage.getItem('token');\n\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isAuthenticated ? (\n                    <Redirect\n                        to={{\n                            pathname: '/',\n                            state: {from: location}\n                        }}\n                    />\n                ) : (\n                    children\n                )\n            }\n        />\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import Main from '../src/components/main/Main'\nimport Login from '../src/components/login/Login';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport ProtectedRoute from './router/ProtectedRoute';\nimport PublicRoute from './router/PublicRoute';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n  const getBasename = path => path.substr(0, path.lastIndexOf('/'));\n  return (\n    <Router basename={getBasename(window.location.pathname)}>\n      <Switch>\n        <PublicRoute exact path=\"/login\">\n          <Login />\n        </PublicRoute>\n        <ProtectedRoute path=\"/\">\n          <Main />\n        </ProtectedRoute>\n      </Switch>\n    </Router>\n\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from '../src/store'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}